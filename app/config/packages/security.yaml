security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            guard:
                authenticators:
                    - App\Security\LoginFormAuthentication

                # redirect anonymous users to the login page
                # entry_point: App\Security\LoginFormAuthentication

            logout:
                path: security_logout
                target: search_index

            switch_user: false
            logout_on_user_change: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/users, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/event/new, roles: ROLE_USER }
        - { path: ^/event/^/edit, roles: ROLE_USER }
        - { path: ^/event/^/delete, roles: ROLE_USER }
        - { path: ^/event/^/interest, roles: ROLE_USER }
        - { path: ^/category, roles: ROLE_USER }
        - { path: ^/comment, roles: ROLE_USER }
        - { path: ^/grade, roles: ROLE_USER }
        - { path: ^/photo, roles: ROLE_USER }
        - { path: ^/profile_photo, roles: ROLE_USER }
        - { path: ^/post, roles: ROLE_USER }
        - { path: ^/group, roles: ROLE_USER }